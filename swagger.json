{
    "swagger": "2.0",
    "info": {
        "description": "Large planning API contracts",
        "version": "1.0.0",
        "title": "Large Planning",
        "contact": {
            "email": "supply-planning@flipkart.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "planning.flipkart.com",
    "basePath": "/v1",
    "tags": [
        {
            "name": "flows",
            "description": "A flow is a workflow which typically has a inputs file paths, parameters, child workflows. If workflow was a graph then every node in the graph can be flow or a task. Task is a defined set of operations that you can do in the platform.",
            "externalDocs": {
                "description": "Find out more confluence link",
                "url": "http://confluence.fkinternal.com"
            }
        },
        {
            "name": "plans",
            "description": "Every execution of a flow is defined as plan entity. Plan event runs a workflows persists all the meta data and audit data for every run."
        },
        {
            "name": "inputs",
            "description": "Inputs of the system"
        },
        {
            "name": "outputs",
            "description": "Outputs of the system"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/plans": {
            "post": {
                "tags": [
                    "plans"
                ],
                "summary": "Creates a new plan.",
                "description": "Result is sorted asc using the created_at field.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Plan that needs to registered with the platform",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlanPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plan has been created successfully.",
                        "schema": {
                            "$ref": "#/definitions/PlanPost200"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/plans/{plan_id}/outputs": {
            "get": {
                "tags": [
                    "plans"
                ],
                "summary": "Outputs generated by a plan.",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "plan_id",
                        "required": true,
                        "type": "string",
                        "description": "plan_id"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Outputs for the plan",
                        "schema": {
                            "$ref": "#/definitions/PlanOutput200"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/plans/{plan_id}/metrics": {
            "get": {
                "tags": [
                    "plans"
                ],
                "summary": "Metrics generated by a plan.",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "plan_id",
                        "required": true,
                        "type": "string",
                        "description": "plan_id"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Metrics for the plan",
                        "schema": {
                            "$ref": "#/definitions/PlanMetrics200"
                        }
                    },
                    "405": {
                        "description": "Invalid plan id"
                    }
                }
            }
        },
        "/plans/{plan_id}": {
            "get": {
                "tags": [
                    "plans"
                ],
                "summary": "Plan details",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "plan_id",
                        "required": true,
                        "type": "string",
                        "description": "plan_id"
                    },
                    {
                        "in": "query",
                        "name": "show_inputs",
                        "required": false,
                        "type": "string",
                        "description": "If set true the json will contain ids of the inputs. Defaults to false."
                    },
                    {
                        "in": "query",
                        "name": "show_outputs",
                        "required": false,
                        "type": "string",
                        "description": "If set true the json will contain ids of the outputs. Defaults to false."
                    },
                    {
                        "in": "query",
                        "name": "show_child",
                        "required": false,
                        "type": "boolean",
                        "description": "If set true the json will contain ids of the children.Defaults to false."
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Plan details",
                        "schema": {
                            "$ref": "#/definitions/PlanInfo200"
                        }
                    },
                    "405": {
                        "description": "Invalid plan id"
                    }
                }
            }
        },
        "/plans/{plan_id}/inputs": {
            "get": {
                "tags": [
                    "plans"
                ],
                "summary": "Inputs used in a particular plan.",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "plan_id",
                        "required": true,
                        "type": "string",
                        "description": "plan_id"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Plan has been created successfully.",
                        "schema": {
                            "$ref": "#/definitions/PlanInput200"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "put": {
                "tags": [
                    "plans"
                ],
                "summary": "Lists all the inputs used in a flow.",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "plan_id",
                        "required": true,
                        "type": "string",
                        "description": "flow_id"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Plan that needs to registered with the platform",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlanInputPut200"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inputs updated"
                    }
                }
            }
        },
        "/flows": {
            "get": {
                "tags": [
                    "flows"
                ],
                "summary": "Search registered flows, get detailed information around flows.",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "flow_id",
                        "description": "Flow id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "flow_name",
                        "description": "Flow name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "created_by",
                        "description": "flow creator ldap id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the attributes of a flow.",
                        "schema": {
                            "$ref": "#/definitions/FlowGet200"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "post": {
                "tags": [
                    "flows"
                ],
                "summary": "Adds a new flow to the platform.",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Flow that needs to registered with the platform",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FlowPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flow has been created successfully.",
                        "schema": {
                            "$ref": "#/definitions/FlowPost200"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/flows/{flow_id}/inputs": {
            "get": {
                "tags": [
                    "flows"
                ],
                "summary": "Lists all the inputs used in a flow.",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "flow_id",
                        "required": true,
                        "type": "string",
                        "description": "flow_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns inputs related to a flow",
                        "schema": {
                            "$ref": "#/definitions/InputFlowGet200"
                        }
                    }
                }
            }
        },
        "/flows/{flow_id}/plans": {
            "get": {
                "tags": [
                    "flows"
                ],
                "summary": "Lists all the plans run for a particular flow.",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "flow_id",
                        "required": true,
                        "type": "string",
                        "description": "flow_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the plans created/run for a particular flow_id",
                        "schema": {
                            "$ref": "#/definitions/PlanFlowGet200"
                        }
                    }
                }
            }
        },
        "/inputs/{input_id}": {
            "get": {
                "tags": [
                    "inputs"
                ],
                "summary": "List of input versions available",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "input_id",
                        "required": true,
                        "type": "string",
                        "description": "flow_id"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer",
                        "description": "Limits the number of results, default is 10."
                    },
                    {
                        "in": "query",
                        "name": "start_offset",
                        "required": false,
                        "type": "integer",
                        "description": "Offsets, used for paginations of search results. Default is 0 (0 being the latest)."
                    },
                    {
                        "in": "query",
                        "name": "flow_id",
                        "required": false,
                        "type": "string",
                        "description": "returns set of inputs only compatible with a particular flow_id"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "type": "string",
                        "description": "Type of inputs",
                        "enum": [
                            "date_picker",
                            "string",
                            "numeric",
                            "dataset",
                            "fact"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns latest uploaded data_versions for the input",
                        "schema": {
                            "$ref": "#/definitions/InputDetailsGet"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "InputDetailsGet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 10
                },
                "data_version": {
                    "type": "string",
                    "example": "123-213-"
                },
                "schema_version": {
                    "type": "number",
                    "example": 2.0
                },
                "comments": {
                    "type": "string",
                    "example": "decemeber manpower coeficient input"
                }
            }
        },
        "ParamterFlowDef": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                }
            }
        },
        "WorkflowDefinitions": {
            "type": "string"
        },
        "FlowPost": {
            "type": "object",
            "required": [
                "name",
                "created_by"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "fc_manpower"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "version": {
                                "type": "number"
                            }
                        }
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "version": {
                                "type": "number"
                            }
                        }
                    }
                },
                "child_plans": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": [
                            "flow_child_id_1",
                            "flow_child_id_2"
                        ]
                    }
                },
                "created_by": {
                    "type": "string",
                    "example": "sudev.ac"
                },
                "worflow_definition": {
                    "items": {
                        "$ref": "#/definitions/WorkflowDefinitions"
                    }
                }
            }
        },
        "FlowGet200": {
            "type": "object",
            "required": [
                "name",
                "created_by"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "fc_manpower"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "child_plans": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "service_child_a"
                            },
                            "id": {
                                "type": "number",
                                "example": "flow_child_id_1"
                            }
                        }
                    }
                },
                "created_by": {
                    "type": "string",
                    "example": "sudev.ac"
                },
                "created_at": {
                    "type": "string",
                    "example": "bin bang"
                },
                "worflow_definition": {
                    "items": {
                        "$ref": "#/definitions/WorkflowDefinitions"
                    }
                }
            }
        },
        "FlowPost200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "flow_123"
                },
                "message": {
                    "type": "string",
                    "example": "flow has been created"
                }
            }
        },
        "PlanPost": {
            "type": "object",
            "required": [
                "name",
                "created_by",
                "created_at",
                "comments",
                "flow_id",
                "plan_start_date",
                "plan_end_date"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "fc_manpower"
                },
                "comments": {
                    "type": "string",
                    "example": "plan with major input change"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "version": {
                                "type": "number"
                            }
                        }
                    }
                },
                "created_by": {
                    "type": "string",
                    "example": "sudev.ac"
                },
                "created_at": {
                    "type": "string",
                    "example": "big bang in iso"
                },
                "plan_start_date": {
                    "type": "string"
                },
                "plan_end_date": {
                    "type": "string"
                },
                "flow_id": {
                    "type": "string"
                },
                "parent_plan_id": {
                    "type": "string",
                    "example": "Plan id of the parent plan, this should only passed in case of the sub plans."
                }
            }
        },
        "PlanPost200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "plan_123"
                },
                "message": {
                    "type": "string",
                    "example": "plan has been created"
                }
            }
        },
        "PlanFlowGet200": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "plan_id": {
                        "type": "string",
                        "example": "plan_123"
                    },
                    "comments": {
                        "type": "string",
                        "example": "plan has been created"
                    },
                    "status": {
                        "type": "string",
                        "example": "PUBLISHED"
                    },
                    "plan_name": {
                        "type": "string",
                        "example": "July RCCP"
                    }
                }
            }
        },
        "InputFlowGet200": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "input_name": {
                        "type": "string",
                        "example": "fc_manpower_coe"
                    },
                    "comments": {
                        "type": "string",
                        "example": "plan has been created"
                    },
                    "has_data_versions": {
                        "type": "boolean",
                        "example": false
                    },
                    "type": {
                        "type": "string",
                        "description": "plans status in the platform",
                        "enum": [
                            "date_picker",
                            "string",
                            "numeric",
                            "dataset",
                            "fact"
                        ]
                    }
                }
            }
        },
        "PlanInput200": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "input_name": {
                        "type": "string",
                        "example": "fc_manpower_coe"
                    },
                    "input_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "comments": {
                        "type": "string",
                        "example": "plan has been created"
                    },
                    "data_version": {
                        "type": "string",
                        "example": "7891-123-c-sdv1234-213"
                    },
                    "download_link": {
                        "type": "string",
                        "example": "http:s2.aws.com/myinputbucket/inputa/version2.zip"
                    },
                    "type": {
                        "type": "string",
                        "description": "plans status in the platform",
                        "enum": [
                            "date_picker",
                            "string",
                            "numeric",
                            "dataset",
                            "fact"
                        ]
                    }
                }
            }
        },
        "PlanOutput200": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "output_name": {
                        "type": "string",
                        "example": "fc_manpower_coe"
                    },
                    "output_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "data_version": {
                        "type": "string",
                        "example": "7891-123-c-sdv1234-213"
                    },
                    "download_link": {
                        "type": "string",
                        "example": "http:s2.aws.com/myinputbucket/inputa/version2.zip"
                    },
                    "type": {
                        "type": "string",
                        "description": "plans status in the platform",
                        "enum": [
                            "dataset",
                            "fact",
                            "report"
                        ]
                    }
                }
            }
        },
        "PlanMetrics200": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "download_link": {
                        "type": "string",
                        "example": "http:s2.aws.com/myinputbucket/inputa/version2.zip"
                    },
                    "metric_name": {
                        "type": "string",
                        "example": "fbf_cut_reservations"
                    }
                }
            }
        },
        "PlanInfo200": {
            "type": "object",
            "required": [
                "name",
                "id",
                "created_by",
                "created_at",
                "plan_end_date",
                "plan_start_date",
                "comment",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Services"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "phmapping"
                            },
                            "id": {
                                "type": "number",
                                "example": "123"
                            },
                            "download_link": {
                                "type": "string",
                                "example": "http:s2.aws.com/myinputbucket/inputa/version2.zip"
                            }
                        }
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "seervice output"
                            },
                            "id": {
                                "type": "number",
                                "example": "123"
                            },
                            "download_link": {
                                "type": "string",
                                "example": "http:s2.aws.com/myinputbucket/inputa/version2.zip"
                            }
                        }
                    }
                },
                "child_plans": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "service_child1"
                            },
                            "id": {
                                "type": "number",
                                "example": "plan_id"
                            }
                        }
                    }
                },
                "created_by": {
                    "type": "string",
                    "example": "creator-name"
                },
                "created_at": {
                    "type": "string",
                    "example": "time in ist"
                },
                "plan_start_date": {
                    "type": "string",
                    "example": "time in ist"
                },
                "plan_end_date": {
                    "type": "string",
                    "example": "time in ist"
                },
                "flowable_id": {
                    "type": "string",
                    "example": "123"
                },
                "comment": {
                    "type": "string",
                    "example": "change in input-v2"
                },
                "status": {
                    "type": "string",
                    "example": "Published"
                }
            }
        },
        "PlanInputPut200": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "input_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "data_value": {
                        "type": "string",
                        "example": "7891-123-c-sdv1234-213"
                    }
                }
            }
        }
    }
}
